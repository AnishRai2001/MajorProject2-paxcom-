<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="com.auth0.jwt.JWT"/>
    <fullyQualifiedTypeName name="com.auth0.jwt.algorithms.Algorithm"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Service.JwtService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.example.jwtServiceRepository.PatientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Entity.Patient"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Service.CustomUserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Service.UserService"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.beans.Encoder"/>
    <fullyQualifiedTypeName name="org.springframework.beans.BeanUtils"/>
    <fullyQualifiedTypeName name="com.example.jwtServiceRepository.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="com.example.jwtService.enumm.RoleName"/>
    <fullyQualifiedTypeName name="com.example.demo.service.DoctorService"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.AvailabilityDto"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EntityNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.Doctor"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.DoctorDto"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.AppointmentRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.example.demo.controller.AppointmentController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.Appointment"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.apache.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="com.example.jwtService.repository.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.example.jwtService.structure.ApiResponse"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Dto.RegisterRequest"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Dto.LoginRequest"/>
    <fullyQualifiedTypeName name="com.example.jwtService.Entity.User"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.UserResponse"/>
</qualifiedTypeNameHistroy>
